// validacja
- ValidatorInterface (po co)
- PolicyValidatorDecorator (dlaczego w nazwie jest decorator)
- AbstractValidatorDecorator (po co ona? jeśli jest kilka dekoratorów to chyba część jest do abstract)
- AbstractValidatorDecorator - nie za bardzo rozumiem co się tu dzieje i po co
- trzeba jeszcze zrobić sprawdzenie czy dodawanego czasownika nie ma już w DB - gdzie to zrobić?


// groupRepo - getVerbsForGroup - w new RelationVerbGroupRepository() podaję new CIDatabase() - czy w tym miejscu
	mogę użyć $this->db?





// w try catch jak zachowa się kod kiedy trafi na exception lub jakiś zdefiniowany exception, pójdzie dalej czy nie
	powinienem dawać return lub exit() czy nie trzeba?
	public function addNew()
	{
		$uiDataArray = json_decode($this->input->raw_input_stream, true);

		try {
			$request = $this->createRequest($uiDataArray);
			if (!$this->createVerbService->execute($request)) {
				$this->jsonErrorReturn();
			}
		} catch (ValidationException $e) {
			$this->jsonErrorReturn($e->getErrorsMessages());
			exit();
		} catch (\Exception $e) {
			$this->jsonErrorReturn();
			exit();
		}

		$this->jsonSuccessData($this->getAllVerbs());
	}


// do GroupValidator a przesyłam repo, w konstruktorze odcieram go - czy robię to za pomocą interface w takim wypadku?
